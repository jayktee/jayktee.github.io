---
title: "Epidemic Policies EDA"
author: "Joyce Tagal" 
date: "`r Sys.Date()`"
output: 
  github_document:
    toc: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r message=FALSE, warning=FALSE}
# Libraries
library(tidyverse)
library(dcl)
library(lubridate)
library(gghighlight)

# Parameters

coronanet_link <- "https://raw.githubusercontent.com/saudiwin/corona_tscs/master/data/CoronaNet/coronanet_release.csv"

coronanet_out <- here::here("data/coronanet_release.csv")

get_est_link <- here::here("data/get_est.rds")

```

## Download data

```{r}

coronanet <- 
  read_csv(coronanet_link)

```

```{r}

coronanet %>% 
  distinct(country) 


```

```{r}

coronanet %>% 
  distinct(type) 

```

What were the first policies announced by each country, on average?

```{r}

coronanet %>% 
  drop_na(date_announced, type) %>% 
  group_by(country) %>% 
  filter(date_announced == min(date_announced)) %>% 
  ungroup() %>% 
  count(type) %>% 
  mutate(type = fct_reorder(type, n)) %>%
  ggplot(aes(type, n)) +
  geom_col() +
  coord_flip() +
  labs(
    title = "First policies enacted by countries on average",
    x = "Policy",
    y = "Count"
  )
  

```

## Replicating CoronaNet paper

Show ranking of countries over time

```{r}

list_countries <- c("United States of America",
                    # "United Kingdom",
                    "China",
                    "Taiwan",
                    "Germany",
                    "Singapore",
                    "Italy",
                    "France",
                    "South Korea",
                    "Gabon",
                    # "Croatia",
                    "United Arab Emirates",
                    "Yemen"#,
                    # "St. Lucia"
)

get_est <- readRDS(get_est_link)
 
get_est_sum <- 
  get_est %>%
  ungroup %>%
  filter(country != "Chad") %>%
  mutate(estimate = (estimate - min(estimate))/(max(estimate) - min(estimate))*100,
         date_announced = ymd(as.character(date_announced))) %>%
  group_by(country,date_announced) %>%
  summarize(med_est = median(estimate),
            high_est = quantile(estimate,.95),
            low_est = quantile(estimate,.05)) %>%
  group_by(date_announced) %>%
  mutate("Country Rank" = rank(med_est))

random_country <- 
  group_by(get_est_sum,country) %>% 
  sample_n(1)

highlights <- 
  get_est_sum %>% 
  filter(country %in% list_countries) %>% 
  ungroup()
  
get_est_sum %>%
  ungroup %>%
  ggplot(aes(y = med_est,x = date_announced)) +
  #geom_ribbon(aes(ymin=low_est,ymax=high_est,group=country),alpha=0.2) +
  geom_line(aes(group = country, colour = country),alpha = 0.7, size = 1) +
  #scale_color_distiller(palette="Reds",direction=1) +
  gghighlight(
    country %in% list_countries,
    label_key = country,
    label_params = list(size = 3),
    # aes(colour = country),
    unhighlighted_params = list(size = .5, colour = alpha("grey", 0.3))
  ) +
  scale_color_manual(
    name = "Country",
    values = c(
      '#00CC33',
      '#E69F00',
      '#CC0000',
      "#FF99FF",
      "#99CCFF",
      "#006699",
      "#990099",
      "orangered1",
      "#9933FF",
      "yellow3", 
      "blue1" 
      )
  ) +
  theme_minimal() +
  theme(panel.grid = element_blank()) +
  labs(caption = 
         "Estimates are derived from Stan, a Markov Chain Monte Carlo sampler.\nThe intervals represent the median and 5% - 95% posterior density region.\nPlot shows one estimate per country per day."
  ) +
  xlab("") +
  ylab("Policy Activity Index Scale (0 to 100)")

ggsave("index.png")


```




## Look at timeline of implemented policies

```{r}

# Code taken directly from CoronaNet paper 

clean_data <- 
  coronanet %>%
  drop_na(type) %>%
  group_by(type, date_announced) %>%
  summarize(policies = length(unique(record_id))) %>%
  arrange(type, date_announced) %>%
  mutate(policies = cumsum(policies)) %>%
  ungroup() 

clean_data %>% 
  mutate(type = recode(type,
    `Public Awareness Campaigns` = "Public\nAwareness\nCampaigns",
    `External Border Restrictions` = "External\nBorder\nRestrictions",
    `Other Policy Not Listed Above` = "Other",
    `Restriction of Non-Essential Businesses` = "Restriction of\nNon-Essential\nBusinesses",
    `Restrictions of Mass Gatherings` = "Restrictions of\nMass Gatherings",
    `Restriction of Non-Essential Government Services` = "Restriction of\nNon-Essential\nGovernment Services",
    `Declaration of Emergency` = "Declaration of\nEmergency",
    `Internal Border Restrictions` = "Internal\nBorder Restrictions",
    `External Border Restrictions` = "External\nBorder Restrictions",
    `Public Awareness Campaigns` = "Public\nAwareness Campaigns",
    `New Task Force or Bureau` = "New Task Force"
  )) %>% 
  ggplot(aes(y = policies, x = date_announced)) +
  geom_line() +
  theme_minimal() +
  facet_wrap(~type)


```


```{r}

labels <- 
  clean_data %>% 
  drop_na(date_announced) %>% 
  group_by(type) %>% 
   mutate(type = recode(type,
    `Public Awareness Campaigns` = "Public\nAwareness\nCampaigns",
    `External Border Restrictions` = "External\nBorder\nRestrictions",
    `Other Policy Not Listed Above` = "Other",
    `Restriction of Non-Essential Businesses` = "Restriction of\nNon-Essential\nBusinesses",
    `Restrictions of Mass Gatherings` = "Restrictions of\nMass Gatherings",
    `Restriction of Non-Essential Government Services` = "Restriction of\nNon-Essential\nGovernment Services",
    `Declaration of Emergency` = "Declaration of\nEmergency",
    `Internal Border Restrictions` = "Internal\nBorder Restrictions",
    `External Border Restrictions` = "External\nBorder Restrictions",
    `Public Awareness Campaigns` = "Public\nAwareness Campaigns",
    `New Task Force or Bureau` = "New Task Force"
  )) %>% 
  filter(date_announced == max(date_announced)) 

clean_data %>% 
  drop_na(date_announced, type) %>% 
  ggplot(aes(y = policies, x = date_announced, group = type, color = type)) +
  geom_line() +
  ggrepel::geom_label_repel(
    data = labels, 
    aes(label = type), 
    min.segment.length = 0.2,
    label.padding = 0.2,
    size = 3, 
    nudge_x = 6,
    nudge_y = 2,
    direction = "both"
  ) + 
  scale_x_date(expand = expansion(mult = c(0, 0.5))) +
  theme(legend.position = "none")


```

```{r}

# Lumping all Physical distancing policies into one type
lumped_data <- 
  coronanet %>%
  drop_na(type) %>%
  mutate(
    distancing = if_else(
      type %in% c(
        'Restriction of Non-Essential Businesses',
        'Restrictions of Mass Gatherings',
        'Restriction of Non-Essential Government Services',
        "Internal Border Restrictions",
        'Social Distancing',
        "Quarantine/Lockdown",
        "Curfew"
      ),
      "Physical distancing policies",
      "Other types of policies"
    )
  ) %>% 
  group_by(distancing, date_announced) %>%
  summarize(policies = length(unique(record_id))) %>%
  arrange(distancing, date_announced) %>%
  mutate(policies = cumsum(policies)) %>%
  ungroup() 


lumped_data %>%
  group_by(distancing, date_announced) %>%
  ggplot(
    aes(
      y = policies, 
      x = date_announced, 
      group = distancing, 
      color = distancing
    )
  ) +
  geom_line() +
  ggrepel::geom_label_repel(
    data = lumped_data %>% 
      drop_na(date_announced) %>% 
      group_by(distancing) %>% 
      filter(date_announced == max(date_announced)
      ),
    aes(label = distancing),
    segment.size = 0.5,
    nudge_x = 2,
    size = 4
  ) +
  theme(legend.position = "none")
 

```

Physical distancing policies on average were announced later than other 
policies such as health monitoring, closure of schools etc.

## Combine data with confirmed cases data

```{r}




```

